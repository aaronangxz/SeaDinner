// See README.txt for information and build instructions.
//
// Note: START and END tags are used in comments to define sections used in
// tutorials.  They are not part of the syntax for Protocol Buffers.
//
// To get an in-depth walkthrough of this file and the related examples, see:
// https://developers.google.com/protocol-buffers/docs/tutorials

//protoc --proto_path=. --go_out=. sea_dinner.proto

// [START declaration]

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sea_dinner.proto

package sea_dinner

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type URLType int32

const (
	URLType_URL_CURRENT URLType = 0
	URLType_URL_MENU    URLType = 1
	URLType_URL_ORDER   URLType = 2
)

// Enum value maps for URLType.
var (
	URLType_name = map[int32]string{
		0: "URL_CURRENT",
		1: "URL_MENU",
		2: "URL_ORDER",
	}
	URLType_value = map[string]int32{
		"URL_CURRENT": 0,
		"URL_MENU":    1,
		"URL_ORDER":   2,
	}
)

func (x URLType) Enum() *URLType {
	p := new(URLType)
	*p = x
	return p
}

func (x URLType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLType) Descriptor() protoreflect.EnumDescriptor {
	return file_sea_dinner_proto_enumTypes[0].Descriptor()
}

func (URLType) Type() protoreflect.EnumType {
	return &file_sea_dinner_proto_enumTypes[0]
}

func (x URLType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLType.Descriptor instead.
func (URLType) EnumDescriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{0}
}

type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_OK   OrderStatus = 0
	OrderStatus_ORDER_STATUS_FAIL OrderStatus = 1
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_OK",
		1: "ORDER_STATUS_FAIL",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_OK":   0,
		"ORDER_STATUS_FAIL": 1,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sea_dinner_proto_enumTypes[1].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_sea_dinner_proto_enumTypes[1]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{1}
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *string `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	StatusCode *int64  `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3,oneof" json:"status_code,omitempty"`
	Selected   *int64  `protobuf:"varint,3,opt,name=selected,proto3,oneof" json:"selected,omitempty"`
	Error      *string `protobuf:"bytes,4,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{0}
}

func (x *OrderResponse) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *OrderResponse) GetStatusCode() int64 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *OrderResponse) GetSelected() int64 {
	if x != nil && x.Selected != nil {
		return *x.Selected
	}
	return 0
}

func (x *OrderResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type DinnerMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *string `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Food   *Food   `protobuf:"bytes,2,opt,name=food,proto3,oneof" json:"food,omitempty"`
}

func (x *DinnerMenu) Reset() {
	*x = DinnerMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DinnerMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DinnerMenu) ProtoMessage() {}

func (x *DinnerMenu) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DinnerMenu.ProtoReflect.Descriptor instead.
func (*DinnerMenu) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{1}
}

func (x *DinnerMenu) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *DinnerMenu) GetFood() *Food {
	if x != nil {
		return x.Food
	}
	return nil
}

type DinnerMenuArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *string `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Food   []*Food `protobuf:"bytes,2,rep,name=food,proto3" json:"food,omitempty"`
}

func (x *DinnerMenuArray) Reset() {
	*x = DinnerMenuArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DinnerMenuArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DinnerMenuArray) ProtoMessage() {}

func (x *DinnerMenuArray) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DinnerMenuArray.ProtoReflect.Descriptor instead.
func (*DinnerMenuArray) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{2}
}

func (x *DinnerMenuArray) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *DinnerMenuArray) GetFood() []*Food {
	if x != nil {
		return x.Food
	}
	return nil
}

type Current struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *string  `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Menu   *Details `protobuf:"bytes,2,opt,name=menu,proto3,oneof" json:"menu,omitempty"`
}

func (x *Current) Reset() {
	*x = Current{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Current) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Current) ProtoMessage() {}

func (x *Current) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Current.ProtoReflect.Descriptor instead.
func (*Current) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{3}
}

func (x *Current) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *Current) GetMenu() *Details {
	if x != nil {
		return x.Menu
	}
	return nil
}

type Food struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        *string `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Id          *int64  `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name        *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ImageUrl    *string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Ordered     *int64  `protobuf:"varint,6,opt,name=ordered,proto3,oneof" json:"ordered,omitempty"`
	Quota       *int64  `protobuf:"varint,7,opt,name=quota,proto3,oneof" json:"quota,omitempty"`
	Disabled    *bool   `protobuf:"varint,8,opt,name=disabled,proto3,oneof" json:"disabled,omitempty"`
	Remaining   *int64  `protobuf:"varint,9,opt,name=remaining,proto3,oneof" json:"remaining,omitempty"`
}

func (x *Food) Reset() {
	*x = Food{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Food) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Food) ProtoMessage() {}

func (x *Food) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Food.ProtoReflect.Descriptor instead.
func (*Food) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{4}
}

func (x *Food) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Food) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Food) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Food) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Food) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Food) GetOrdered() int64 {
	if x != nil && x.Ordered != nil {
		return *x.Ordered
	}
	return 0
}

func (x *Food) GetQuota() int64 {
	if x != nil && x.Quota != nil {
		return *x.Quota
	}
	return 0
}

func (x *Food) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *Food) GetRemaining() int64 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

type Details struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *int64  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Comment     *string `protobuf:"bytes,3,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
	PollStart   *string `protobuf:"bytes,4,opt,name=poll_start,json=pollStart,proto3,oneof" json:"poll_start,omitempty"`
	PollEnd     *string `protobuf:"bytes,5,opt,name=poll_end,json=pollEnd,proto3,oneof" json:"poll_end,omitempty"`
	ServingTime *string `protobuf:"bytes,6,opt,name=serving_time,json=servingTime,proto3,oneof" json:"serving_time,omitempty"`
	Active      *bool   `protobuf:"varint,7,opt,name=active,proto3,oneof" json:"active,omitempty"`
	VenueId     *int64  `protobuf:"varint,8,opt,name=venue_id,json=venueId,proto3,oneof" json:"venue_id,omitempty"`
}

func (x *Details) Reset() {
	*x = Details{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Details) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Details) ProtoMessage() {}

func (x *Details) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Details.ProtoReflect.Descriptor instead.
func (*Details) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{5}
}

func (x *Details) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Details) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Details) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Details) GetPollStart() string {
	if x != nil && x.PollStart != nil {
		return *x.PollStart
	}
	return ""
}

func (x *Details) GetPollEnd() string {
	if x != nil && x.PollEnd != nil {
		return *x.PollEnd
	}
	return ""
}

func (x *Details) GetServingTime() string {
	if x != nil && x.ServingTime != nil {
		return *x.ServingTime
	}
	return ""
}

func (x *Details) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *Details) GetVenueId() int64 {
	if x != nil && x.VenueId != nil {
		return *x.VenueId
	}
	return 0
}

type UserKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	UserKey *string `protobuf:"bytes,2,opt,name=user_key,json=userKey,proto3,oneof" json:"user_key,omitempty"`
	Ctime   *int64  `protobuf:"varint,3,opt,name=ctime,proto3,oneof" json:"ctime,omitempty"`
	Mtime   *int64  `protobuf:"varint,4,opt,name=mtime,proto3,oneof" json:"mtime,omitempty"`
}

func (x *UserKey) Reset() {
	*x = UserKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserKey) ProtoMessage() {}

func (x *UserKey) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserKey.ProtoReflect.Descriptor instead.
func (*UserKey) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{6}
}

func (x *UserKey) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserKey) GetUserKey() string {
	if x != nil && x.UserKey != nil {
		return *x.UserKey
	}
	return ""
}

func (x *UserKey) GetCtime() int64 {
	if x != nil && x.Ctime != nil {
		return *x.Ctime
	}
	return 0
}

func (x *UserKey) GetMtime() int64 {
	if x != nil && x.Mtime != nil {
		return *x.Mtime
	}
	return 0
}

type UserChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	UserChoice *string `protobuf:"bytes,2,opt,name=user_choice,json=userChoice,proto3,oneof" json:"user_choice,omitempty"`
	Ctime      *int64  `protobuf:"varint,3,opt,name=ctime,proto3,oneof" json:"ctime,omitempty"`
	Mtime      *int64  `protobuf:"varint,4,opt,name=mtime,proto3,oneof" json:"mtime,omitempty"`
}

func (x *UserChoice) Reset() {
	*x = UserChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChoice) ProtoMessage() {}

func (x *UserChoice) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChoice.ProtoReflect.Descriptor instead.
func (*UserChoice) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{7}
}

func (x *UserChoice) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserChoice) GetUserChoice() string {
	if x != nil && x.UserChoice != nil {
		return *x.UserChoice
	}
	return ""
}

func (x *UserChoice) GetCtime() int64 {
	if x != nil && x.Ctime != nil {
		return *x.Ctime
	}
	return 0
}

func (x *UserChoice) GetMtime() int64 {
	if x != nil && x.Mtime != nil {
		return *x.Mtime
	}
	return 0
}

type UserChoiceWithKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     *int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	UserKey    *int64  `protobuf:"varint,2,opt,name=user_key,json=userKey,proto3,oneof" json:"user_key,omitempty"`
	UserChoice *string `protobuf:"bytes,3,opt,name=user_choice,json=userChoice,proto3,oneof" json:"user_choice,omitempty"`
	Ctime      *int64  `protobuf:"varint,4,opt,name=ctime,proto3,oneof" json:"ctime,omitempty"`
	Mtime      *int64  `protobuf:"varint,5,opt,name=mtime,proto3,oneof" json:"mtime,omitempty"`
}

func (x *UserChoiceWithKey) Reset() {
	*x = UserChoiceWithKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChoiceWithKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChoiceWithKey) ProtoMessage() {}

func (x *UserChoiceWithKey) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChoiceWithKey.ProtoReflect.Descriptor instead.
func (*UserChoiceWithKey) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{8}
}

func (x *UserChoiceWithKey) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *UserChoiceWithKey) GetUserKey() int64 {
	if x != nil && x.UserKey != nil {
		return *x.UserKey
	}
	return 0
}

func (x *UserChoiceWithKey) GetUserChoice() string {
	if x != nil && x.UserChoice != nil {
		return *x.UserChoice
	}
	return ""
}

func (x *UserChoiceWithKey) GetCtime() int64 {
	if x != nil && x.Ctime != nil {
		return *x.Ctime
	}
	return 0
}

func (x *UserChoiceWithKey) GetMtime() int64 {
	if x != nil && x.Mtime != nil {
		return *x.Mtime
	}
	return 0
}

type OrderRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int64  `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	UserId    *int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	FoodId    *string `protobuf:"bytes,3,opt,name=food_id,json=foodId,proto3,oneof" json:"food_id,omitempty"`
	OrderTime *int64  `protobuf:"varint,4,opt,name=order_time,json=orderTime,proto3,oneof" json:"order_time,omitempty"`
	Status    *int64  `protobuf:"varint,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
	ErrorMsg  *string `protobuf:"bytes,6,opt,name=error_msg,json=errorMsg,proto3,oneof" json:"error_msg,omitempty"`
}

func (x *OrderRecord) Reset() {
	*x = OrderRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sea_dinner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRecord) ProtoMessage() {}

func (x *OrderRecord) ProtoReflect() protoreflect.Message {
	mi := &file_sea_dinner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRecord.ProtoReflect.Descriptor instead.
func (*OrderRecord) Descriptor() ([]byte, []int) {
	return file_sea_dinner_proto_rawDescGZIP(), []int{9}
}

func (x *OrderRecord) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *OrderRecord) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *OrderRecord) GetFoodId() string {
	if x != nil && x.FoodId != nil {
		return *x.FoodId
	}
	return ""
}

func (x *OrderRecord) GetOrderTime() int64 {
	if x != nil && x.OrderTime != nil {
		return *x.OrderTime
	}
	return 0
}

func (x *OrderRecord) GetStatus() int64 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *OrderRecord) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

var File_sea_dinner_proto protoreflect.FileDescriptor

var file_sea_dinner_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x65, 0x61, 0x5f, 0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x73, 0x65, 0x61, 0x5f, 0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xc0,
	0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x68, 0x0a, 0x0a, 0x44, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x04,
	0x66, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x61,
	0x5f, 0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x48, 0x01, 0x52, 0x04,
	0x66, 0x6f, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x6f, 0x6f, 0x64, 0x22, 0x5f, 0x0a, 0x0f, 0x44,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x04, 0x66,
	0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x61, 0x5f,
	0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x66, 0x6f, 0x6f,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x07,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x61, 0x5f, 0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0xfc, 0x02, 0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x64, 0x12,
	0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x05, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52,
	0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xe0, 0x02, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x45, 0x6e, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x07, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x76, 0x65, 0x6e, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x07, 0x55, 0x73, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xea,
	0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x04, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x2a, 0x37, 0x0a, 0x07, 0x55, 0x52, 0x4c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x52, 0x4c, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x52, 0x4c, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x02, 0x2a,
	0x39, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13,
	0x0a, 0x0f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x3b,
	0x73, 0x65, 0x61, 0x5f, 0x64, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_sea_dinner_proto_rawDescOnce sync.Once
	file_sea_dinner_proto_rawDescData = file_sea_dinner_proto_rawDesc
)

func file_sea_dinner_proto_rawDescGZIP() []byte {
	file_sea_dinner_proto_rawDescOnce.Do(func() {
		file_sea_dinner_proto_rawDescData = protoimpl.X.CompressGZIP(file_sea_dinner_proto_rawDescData)
	})
	return file_sea_dinner_proto_rawDescData
}

var file_sea_dinner_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sea_dinner_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sea_dinner_proto_goTypes = []interface{}{
	(URLType)(0),              // 0: sea_dinner.URLType
	(OrderStatus)(0),          // 1: sea_dinner.OrderStatus
	(*OrderResponse)(nil),     // 2: sea_dinner.OrderResponse
	(*DinnerMenu)(nil),        // 3: sea_dinner.DinnerMenu
	(*DinnerMenuArray)(nil),   // 4: sea_dinner.DinnerMenuArray
	(*Current)(nil),           // 5: sea_dinner.Current
	(*Food)(nil),              // 6: sea_dinner.Food
	(*Details)(nil),           // 7: sea_dinner.Details
	(*UserKey)(nil),           // 8: sea_dinner.UserKey
	(*UserChoice)(nil),        // 9: sea_dinner.UserChoice
	(*UserChoiceWithKey)(nil), // 10: sea_dinner.UserChoiceWithKey
	(*OrderRecord)(nil),       // 11: sea_dinner.OrderRecord
}
var file_sea_dinner_proto_depIdxs = []int32{
	6, // 0: sea_dinner.DinnerMenu.food:type_name -> sea_dinner.Food
	6, // 1: sea_dinner.DinnerMenuArray.food:type_name -> sea_dinner.Food
	7, // 2: sea_dinner.Current.menu:type_name -> sea_dinner.Details
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sea_dinner_proto_init() }
func file_sea_dinner_proto_init() {
	if File_sea_dinner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sea_dinner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DinnerMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DinnerMenuArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Current); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Food); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Details); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChoiceWithKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sea_dinner_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sea_dinner_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_sea_dinner_proto_msgTypes[9].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sea_dinner_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sea_dinner_proto_goTypes,
		DependencyIndexes: file_sea_dinner_proto_depIdxs,
		EnumInfos:         file_sea_dinner_proto_enumTypes,
		MessageInfos:      file_sea_dinner_proto_msgTypes,
	}.Build()
	File_sea_dinner_proto = out.File
	file_sea_dinner_proto_rawDesc = nil
	file_sea_dinner_proto_goTypes = nil
	file_sea_dinner_proto_depIdxs = nil
}
